
--------------------------
-- Lexem grammar v0.2.0 --
--------------------------
-- Description:
--    Control statements of the functional core.
--------------------------

let (ws, check_keyword, identifier) = import("root:commons")
let fn_exp = import("../expressions")


pub! exp control[- capture] {
    | exit:control_without_expression("exit")
    | next:control_without_expression("next")
    | redo:control_without_expression("redo")
    | restart:control_without_expression("restart")
    | return:control_with_expression("return", withTag = false)
}

exp control_with_expression(token, withTag) {
    |> check_keyword(token)

    if(withTag) {
        |? "'" tag:identifier
    }

    onBack {
        log.error("An expression is required for the '\(token)' control statement.")
    }

    |> ws? expression:fn_exp.expression
}

exp control_without_expression(token) {
    |> check_keyword(token)
    |? "'" tag:identifier
}