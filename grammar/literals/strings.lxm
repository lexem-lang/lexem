
#------------------------#
#- Lexem grammar v0.1.0 -#
#------------------------#
#- Description:
#-    The lexem's string literals.
#------------------------#

let gen = import("generics")

pub! exp string(props![- capture]) {
	| normal_string
	| string_without_escapes
}

exp normal_string {
	|> (delimeter[property]: "$"*) "\""
	onback {
		log.error("Incorrect string literal. The close sequence of symbols '"\(node.properties.delimeter)' was expected.")
	}
	|? string_item+?
	|> "\"\(node.properties.delimeter)"
}

exp string_item(props![- capture backtrack]) {
	| gen.escaped_expression
	| gen.escape
	| [! \(ucd_category.Cn) \(whitespace_endOfLine_block)]++ set_props![capture]
}

exp string_without_escapes {
	|> "lit!"
	onback {
		log.error("Incorrect string literal. A string patter was expected after the 'lit!' macro.")
	}
	|> (delimeter[property]: "$"*) "\""
	onback {
		log.error("Incorrect string literal. The close sequence of symbols '"\(node.properties.delimeter)' was expected.")
	}
	|? string_item_no_escapes+?
	|> "\"\(node.properties.delimeter)"
}

exp string_item_no_escapes(props![- capture backtrack]) {
	|> [! \(ucd_category.Cn) \(whitespace_endOfLine_block)]++ set_props![capture]
}