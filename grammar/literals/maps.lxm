
#------------------------#
#- Lexem grammar v0.1.1 -#
#------------------------#
#- Description:
#-    Map literals.
#------------------------#

let (ws) = import("root:commons")
let fn_exp = import("root:functional/expressions")

pub! exp map {
	|> "map!" set_props![- isConstant]

	onBack {
		log.error("Incorrect map literal. The open bracket '{' is required after the map macro (map!).")
	}

	|? "#" set_props![isConstant]
	| "{" ws?

	repeat i for *+ {
         if i > 0 {
            |> ws? "," ws?
         }

         |> map_element
    }

	onBack {
		log.error("Incorrect map literal. The close bracket '}' is required.")
	}

	|> ws? ("," ws?)? "}"	#- trailing comma
}

exp map_element {
	|> key:fn_exp.expression

	onBack {
		log.error("Incorrect map property. After the keyword it is required the relation symbol ':'.")
	}

	|> ws? ":"

	onBack {
		log.error("Incorrect map property. After the relation symbol ':' it is require the value of the property.")
	}

	|> ws? value:fn_exp.expression
}