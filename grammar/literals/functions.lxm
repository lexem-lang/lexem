
#------------------------#
#- Lexem grammar v0.1.1 -#
#------------------------#
#- Description:
#-    Function literals.
#------------------------#

let (ws) = import("../commons")
let fn_exp = import("../functional/expressions")
let fn_stmt = import("../functional/statement")

pub! exp function {
	|> "fun" ws? args:function_arguments?

	onBack {
		log.error("Incorrect literal function. It is required a body block '{}'.")
	}

	|> body:fn_stmt.block
}

pub! exp function_arguments {
	|> "(" ws?

	repeat i for *+ {
	    if i > 0 {
            |> ws? "," ws?
            |> function_arguments_element
	    }
	    else {
            | function_arguments_element
	        | fn_exp.expression
	    }
	}

	onBack {
		log.error("Incorrect arguments. The close parenthesis ')' is required.")
	}

	|> ws? ("," ws?)? ")"	#- trailing comma
}

exp function_arguments_element {
	|> key:identifier
	|? ws? ":" {
		onBack {
			log.error("Incorrect argument. After the relation symbol ':' it is require the default value of the argument.")
		}

		|> ws? value:fn_exp.expression
	}
}