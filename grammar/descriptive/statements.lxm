
#------------------------#
#- Lexem grammar v0.1.1 -#
#------------------------#
#- Description:
#-    Statements of the descriptive core.
#------------------------#

let (ws, identifier) = import("root:commons")
let fn_exp = import("functional/expressions")
let (pattern) = import("pattern")
let loops = import("statements/loops")
let (block as stmt_block) = import("root:functional/statements")


#----------------------#
#-  Generic Elements  -#
#----------------------#

pub! exp statement[- capture] {
    | global.lexem.pattern
    | onBack_block
    | loops.quantified
    | stmt_block
}

exp onBack_block {
    |> gen.keyword("onBack") ws? block
}

pub! exp block(props![- backtrack]) {
    |> "{"
    |? "'" tag:identifier

    for *+ do {
        |? ws?
        |> statement
    }

    onBack {
        log.error("Incorrect block. The close bracket '}' is required.")
    }

    |> ws? "}"
}
