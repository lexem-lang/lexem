
--------------------------
-- Lexem grammar v0.1.1 --
--------------------------
-- Description:
--    Anchor lexemes of the descriptive core.
--------------------------

let (ws_simple) = import("root:commons")
let fn_exp = import("root:functional/expressions")
let (string) = import("root:literals/string")
let (interval) = import("root:literals/interval")

pub! exp anchor[- capture] {
    | relative_anchor
    | absolute_anchor
}

exp relative_anchor {
    set_props![- negated]
    |? "!" set_props![negated]

    | "^^" set_props![text start]
    | "$$" set_props![text - start]
    | "^" set_props![start]
    | "$" set_props![- start]

    onBack {
        log.error("The open parenthesis '(' of the anchor group or an abbreviation is required here.")
    }

    | "(" {
        for *+ {
            |? ws_simple?
            |> relative_anchor_element
        }

        onBack {
            log.error("The close parenthesis ')' is required to close the anchor group.")
        }

        |> ws_simple? ")"
    }
    | set_props![line]
}

exp relative_anchor_element {
    | "text" set_props![: type("text")]
    | "line" set_props![: type("line")]
    | string set_props![: type("string")]
    | interval set_props![: type("interval")]
}

exp absolute_anchor {
    set_props![- negated]
    |? "!" set_props![negated]

    |> "&"

    onBack {
        log.error("The open parenthesis '(' of the anchor group is required.")
    }

    |> "("

    for *+ {
        |? ws_simple?
        |> absolute_anchor_element
    }

    onBack {
        log.error("The close parenthesis ')' is required to close the anchor group.")
    }

    |> ws? ")"
}

exp absolute_anchor_element {
    | "from_start" set_props![: type("from_start")]
    | "from_end" set_props![: type("from_end")]
    | "analysis_beginning" set_props![: type("analysis_beginning")]

    onBack {
        log.error("The open square bracket '[' of the anchor element is required.")
    }

    |> "["

    onBack {
        log.error("An expression is required for the value of the anchor element.")
    }

    |> fn_exp.expression

    onBack {
        log.error("The close square bracket ']' is required to close the anchor element.")
    }

    |> ws? "]"
}